@use 'common/variables-sass' as *;

:root {
  --avatar-border: #{$border-width-sm} currentColor solid;
}

.friendsui-container {
  /* === Hide Normal Status Block === */
  .avatarStatus,
  .speakerStatus,
  [class*='steamavatar_avatarHolder']
    [class*='steamavatar_avatarStatus'].bottom {
    display: none !important;
  }

  /* Apply border to avatar to show status */
  .avatarHolder .avatar {
    border: var(--avatar-border) !important;
  }

  .avatarFrame img,
  .miniprofile_Frame_3MZRj {
    border-radius: $border-radius-sm;
    box-shadow: inset 0 0 4px $border-width-sm currentcolor;
  }

  /* === Status Colours === */
  $selectors: ('.avatar', '.avatarFrame img', "[class*='miniprofile_Frame_']");

  @mixin style-with-parent($parent, $selector, $color) {
    #{$parent} #{$selector} {
      color: rgb(var(#{$color})) !important;
      fill: rgb(var(#{$color})) !important;
    }
  }

  @each $selector in $selectors {
    @include style-with-parent("[class*='ingame']", $selector, --ingame);
    @include style-with-parent("[class*='online']", $selector, --online);
    @include style-with-parent("[class*='offline']", $selector, --offline);
    @include style-with-parent("[class*='away']", $selector, --away);
    @include style-with-parent(
      "[class*='watchingbroadcast']",
      $selector,
      --watching
    );
    @include style-with-parent(
      ".ingame[class*='away']",
      $selector,
      --away-in-game
    );
  }

  /* Apply margin to avatars without frame for better positioning */
  .avatarHolder:not(.awayOrSnooze) :last-child.avatar,
  .avatarHolder.awayOrSnooze :nth-last-child(2).avatar {
    margin: calc(-1 * #{$border-width-sm});
  }
}
